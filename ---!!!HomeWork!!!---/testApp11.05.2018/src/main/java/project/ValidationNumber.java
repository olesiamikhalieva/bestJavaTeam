
package project;
import lombok.Builder;
import lombok.Data;

import java.util.regex.Pattern;

@Data
@Builder
public class ValidationNumber {

    private static Pattern numberMustBeginPlus = Pattern.compile("(^\\+[1-9]\\d{2})(\\d{3,10})");
    //шаблон, соглассно которому номер должен начинаться с +,
    //а после плюса не должно идти 0

    private static Pattern ifStartWithDigits= Pattern.compile("(^\\+(7|1|31|27|33|41|48|61|30|49|44|32|36|39|43|371|357|380|" +
            "351|966|420|375|995|353|358|372|961|971))\\d*");
    //шаблон, согласно которому номер начинается с +7 или +1 или +31 или +33 ... и после идет любое колличество цифр

    private static Pattern pattern2 = Pattern.compile(
            "(^\\+(((7|1)(\\d{10}))|" +                  //сначала идет + далее 7 или 1, далее 10 цифр               - всего 13 символов в номере
            "((371|357)(\\d{8}))|" +                    //сначала идет + далее 371 или 357, далее 8 цифр            - всего 12 символов в номере
            "((31|27|33|41|48|61)(\\d{9}))|" +          //сначала идет + далее 31|27|33|41|48|61 далее 9 цифр       - всего 12 символов в номере
            "((30)(\\d{10}))|" +                        //сначала идет + далее 30, далее 10 цифр
            "((380|351|996|420|375)(\\d{9}))|" +        //сначала идет + далее 380|351|996|420|375, далее 9 цифр
            "((995)(\\d{8,10}))|" +                     //сначала идет + далее 995, далее от 8 до 10 цифр
            "((49)(\\d{6,10}))|" +                      //сначала идет + далее 49, далее от 6 до 10 цифр
            "((353|358)(\\d{5,9}))|" +                  //сначала идет + ...
            "((44)(\\d{8,10}))|" +                      //сначала идет + ...
            "((32|36)(\\d{7,8}))|" +                    //сначала идет + ...
            "((372)(\\d{6,7}))|" +                      //сначала идет + ...
            "((39)(\\d{8,9}))|" +                       //сначала идет + ...
            "((961)(\\d{5,7}))|" +                      //сначала идет + ...
            "((971)(\\d{5,8}))|" +                      //сначала идет + ...
            "((43)(\\d{4,11}))))");                      //сначала идет + ...




    public static boolean checkValidationNumber(String number){
        if(!numberMustBeginPlus.matcher(number).matches()){ //если номер начинается с + и после не идет 0, и в номере от 7 до 14 символов
            System.out.println("Рус.: Номер телефона введен не корректно. " + number);
            System.out.println("Укр.: Номер телефону введено не коректно. " + number);
            return false;
        }
        if (ifStartWithDigits.matcher(number).matches()){ // если начинается с заданной последовательности
            if (!pattern2.matcher(number).matches()){ // если не найдено совпадение вывести ошибку
                System.out.println("Рус.: Номер телефона введен не корректно. " + number);
                System.out.println("Укр.: Номер телефону введено не коректно. " + number);
                return false;
            }
        }
        return true;
    }
}
